name: Update SVG with External Content

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update-svg:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download External SVGs
        run: |
          mkdir -p temp
          curl -L "https://spotify-github-profile.kittinanx.com/api/view?uid=pjyifjjapvah0yoy2zvd8vx0v&cover_image=true&theme=default&show_offline=false&background_color=121212&interchange=false&bar_color=53b14f&bar_color_cover=true" -o temp/spotify.svg
          curl -L "https://raw.githubusercontent.com/trueberryless/trueberryless/snake/github-contribution-grid-snake-dark.svg" -o temp/snake.svg

      - name: Inline SVG Contents
        run: |
          MAIN_SVG="html-wrapper.svg" 
          TEMP_FILE="temp/updated.svg"

          # Read the current SVG into memory
          content=$(cat "$MAIN_SVG")

          # Function to replace content between markers
          replace_between_markers() {
            local start_marker="$1"
            local end_marker="$2"
            local new_content_file="$3"

            # Escape slashes and newlines for safe replacement
            new_content=$(sed ':a;N;$!ba;s/\n/\\n/g' "$new_content_file")

            # Use awk instead of sed to replace content between markers safely
            content=$(awk -v start="$start_marker" -v end="$end_marker" -v new_content="$new_content" '
              {
                if ($0 ~ start) { print; print new_content; inside=1; next }
                if ($0 ~ end) { inside=0 }
                if (!inside) print
              }
            ' <<< "$content")
          }

          # Apply replacements
          replace_between_markers "<!-- INLINE SPOTIFY START -->" "<!-- INLINE SPOTIFY END -->" "temp/spotify.svg"
          replace_between_markers "<!-- INLINE SNAKE START -->" "<!-- INLINE SNAKE END -->" "temp/snake.svg"

          # Write the final modified content back to the file
          echo "$content" > "$MAIN_SVG"

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add html-wrapped.svg
          git commit -m "Auto-update SVG with inlined external content" || exit 0
          git push origin main
